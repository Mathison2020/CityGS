# Model Parameters
model_params: {
    model_config: {
        name: "GaussianModel",
        kwargs: {}
    },
    sh_degree: 3,
    source_path: "data/luoshedaqiao_forward",  # adjust it to your own dataset
    partition_name: "sjk_luoshe_refine",  # adjust it to the name you want
    pretrain_path: "output/sjk_luoshe_coarse/point_cloud/iteration_30000",  # adjust it to the output path of your coarse model
    model_path: "",  # leave it blank
    images: "images",
    transient: "masks", # Directory name of masks
    block_dim: [5, 5, 1],  # replace $X, $Y, $Z with your block dimension along x, y, z axis
    aabb: [-1.5, -1, -30, 3.6, 5.0, 1],  # Uncomment this line if you want to appoint your own aabb definition
    resolution: -1,  # adjust it to your downsample factor. -1 means downsampling longest side of image to 1,600 pixels
    white_background: False,
    data_device: "cuda",
    eval: False,
    apply_mask: True,
    apply_apperance_decouple: True,
}

# Pipeline Parameters
pipeline_params: {
    convert_SHs_python:  False,
    compute_cov3D_python:  False,
    debug:  False
}


# Optimization Parameters
# Adjust the parameters according to your dataset
optim_params: {
    iterations: 30_000,
    position_lr_init: 0.000064,
    position_lr_final: 0.00000064,
    position_lr_delay_mult: 0.01,
    position_lr_max_steps: 25_000,
    feature_lr: 0.0025,
    opacity_lr: 0.05,
    scaling_lr: 0.004,
    rotation_lr: 0.001,
    percent_dense: 0.01,
    lambda_dssim: 0.2,
    lambda_depth: 0.05,
    densification_interval: 1000,
    opacity_reset_interval: 5000,
    densify_from_iter: 2000,
    densify_until_iter: 15_000,
    densify_grad_threshold: 0.0002,
    # Appearance Decouple
    appearance_embeddings_lr: 0.001,  # AE的学习率
    appearance_network_lr: 0.001,     # 外观解耦网络的学习率
}


